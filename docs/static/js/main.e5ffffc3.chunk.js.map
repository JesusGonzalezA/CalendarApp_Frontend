{"version":3,"sources":["router/PublicRoute.js","router/PrivateRoute.js","helpers/fetch.js","types/types.js","helpers/formatEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/CalendarModalStyles.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/ui/Loading.js","router/AppRouter.js","reducers/eventsReducer.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","types","formatEvents","events","map","e","end","moment","toDate","start","eventsAddNew","event","type","payload","eventsLoaded","eventsUpdate","eventsDelete","eventsClearActive","login","user","checkingFinish","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","uid","setItem","Date","getTime","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","tomorrow","clone","notes","CalendarModal","activeEvent","modalOpen","ui","isTitleValid","setIsTitleValid","formValues","setFormValues","useEffect","closeModal","validateForm","momentStart","momentEnd","isSameOrAfter","trim","length","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","id","getState","_id","eventsStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","view","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","components","Loading","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5ffffc3.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )} \r\n        / >\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({ \r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )} \r\n        / >\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","\r\nconst baseUrl = process.env.REACT_APP_URL_API;\r\n\r\n\r\n//**************************************************************************\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n\r\n}\r\n\r\n//**************************************************************************\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open Modal', \r\n    uiCloseModal: '[ui] Close Modal',\r\n    \r\n    eventsStartAddNew: '[events] Start add new',\r\n    eventsAddNew: '[events] Add new',\r\n    eventsSetActive: '[events] Set active,',\r\n    eventsClearActive: '[events] Clear active',\r\n    eventsUpdate: '[events] Event update',\r\n    eventsDelete: '[events] Event delete',\r\n    eventsLoaded: '[events] Events loaded',\r\n    eventsCleanLogout: '[events] Events clear logout',\r\n\r\n    authCheckingFinish: '[auth] Finish Checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogin: '[auth] Login',\r\n    authLogout: '[auth] Logout'\r\n}","import moment from 'moment';\r\n\r\nexport const formatEvents = ( events = [] ) => {\r\n    return events.map( (e) => ({\r\n        ...e,\r\n        end: moment( e.end ).toDate(),\r\n        start: moment( e.start ).toDate()\r\n    }));\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { formatEvents } from \"../helpers/formatEvents\";\r\nimport { types } from \"../types/types\";\r\n//**************************************************************************\r\n\r\nexport const eventsStartAddNew = ( event ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid: _id , name } = getState().auth;\r\n\r\n        try {\r\n\r\n            const resp = await fetchWithToken( 'events', event , 'POST' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                                \r\n                dispatch( eventsAddNew({\r\n                    ...event,\r\n                    id: body.data.id,\r\n                    user: {\r\n                        _id,\r\n                        name\r\n                    }\r\n                }) );\r\n\r\n                Swal.fire('Completed', 'The event was added succesfully', 'success');\r\n            } else {\r\n                Swal.fire('Error', 'Could not add the event', 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', 'Something went bad', 'error');\r\n        }\r\n    }\r\n} \r\n\r\nconst eventsAddNew = ( event ) => ({\r\n    type: types.eventsAddNew,\r\n    payload: event\r\n})\r\n\r\n//--------------------------------------------------------------------------\r\n\r\nexport const eventsStartLoading = () => {\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = formatEvents(body.data);\r\n            dispatch( eventsLoaded( events ) );\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', error, 'error');\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst eventsLoaded = ( events ) => ({\r\n    type: types.eventsLoaded,\r\n    payload: events\r\n})\r\n\r\n//--------------------------------------------------------------------------\r\n\r\nexport const eventsStartUpdate = ( event ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        try {\r\n\r\n            const resp = await fetchWithToken( `events/${event.id}`, event , 'PUT' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                                \r\n                dispatch( eventsUpdate(event) );\r\n\r\n                Swal.fire('Completed', 'The event was updated succesfully', 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', 'Something went bad', 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst eventsUpdate = ( event ) => ({\r\n    type: types.eventsUpdate,\r\n    payload: event\r\n})\r\n\r\n//--------------------------------------------------------------------------\r\n\r\nexport const eventsStartDelete = ( ) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { id } = getState().events.activeEvent;\r\n\r\n        try {\r\n\r\n            const resp = await fetchWithToken( `events/${id}`, {} , 'DELETE' );\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                                \r\n                dispatch( eventsDelete() );\r\n\r\n                Swal.fire('Completed', 'The event was deleted succesfully', 'success');\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            Swal.fire('Error', 'Something went bad', 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst eventsDelete = () => ({\r\n    type: types.eventsDelete\r\n})\r\n\r\n//--------------------------------------------------------------------------\r\n\r\nexport const eventsSetActive = ( event ) => ({\r\n    type: types.eventsSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventsClearActive = ( ) => ({\r\n    type: types.eventsClearActive\r\n})\r\n\r\nexport const eventsCleanLogout = () => ({\r\n    type: types.eventsCleanLogout\r\n})\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventsCleanLogout } from './events';\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async ( dispatch ) => {\r\n        \r\n        const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        if ( body.ok ) {\r\n            const { token, uid, name } = body.data;\r\n\r\n            localStorage.setItem('token', token );\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( { uid, name } ) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\n//--------------------------------------------------------------------------\r\n\r\nexport const startRegister = ( email, name, password ) => {\r\n    return async ( dispatch ) => {\r\n        \r\n        const resp = await fetchWithoutToken('auth/new', { email, name, password }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        if ( body.ok ) {\r\n            const { token, uid, name } = body.data;\r\n\r\n            localStorage.setItem('token', token );\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( { uid, name } ) );\r\n        } else {\r\n            Swal.fire('Error', '' , 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n//--------------------------------------------------------------------------\r\n\r\nexport const startChecking = () => {\r\n\r\n    return async ( dispatch ) => {\r\n  \r\n        const resp = await fetchWithToken('auth/renew' );\r\n        const body = await resp.json();\r\n        \r\n        if ( body.ok ) {\r\n            const { token, uid, name } = body.data;\r\n\r\n            localStorage.setItem('token', token );\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch( login( { uid, name } ) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\n//--------------------------------------------------------------------------\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n        dispatch( eventsCleanLogout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: '',\r\n        rPassword2: ''\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { \r\n        rName,\r\n        rEmail,\r\n        rPassword1,\r\n        rPassword2 \r\n    } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if ( rPassword1 !== rPassword2 ){\r\n            Swal.fire('Error', 'Passwords should match', 'error');\r\n            return;\r\n        } \r\n\r\n        dispatch( startRegister(rEmail, rName, rPassword1) );\r\n        \r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                value={ rName }\r\n                                name=\"rName\"\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                value={ rEmail }\r\n                                name=\"rEmail\"\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\" \r\n                                value={ rPassword1 }\r\n                                name=\"rPassword1\"\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repeat password\" \r\n                                value={ rPassword2 }\r\n                                name=\"rPassword2\"\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Create account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n            \r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Logout</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n    \r\n    return (\r\n        <div>\r\n           <strong>{ title }</strong><br/>\r\n           <span>@{ user.name }</span> \r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})","import React, { useEffect, useState } from 'react'\r\nimport moment from 'moment'\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { CalendarModalStyles } from '../../helpers/CalendarModalStyles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { \r\n    eventsStartAddNew, \r\n    eventsClearActive, \r\n    eventsStartUpdate } from '../../actions/events';\r\n \r\nconst customStyles = CalendarModalStyles;\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst tomorrow = now.clone().add(1, 'days');\r\n\r\nconst initialState = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: tomorrow.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { activeEvent } = useSelector(state => state.events)\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    \r\n    const [isTitleValid, setIsTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initialState);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        \r\n        const formState = ( activeEvent )? activeEvent : initialState;\r\n\r\n        setFormValues(formState);\r\n\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    } \r\n\r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventsClearActive() );\r\n        setFormValues(initialState);\r\n    }\r\n\r\n    const handleStartDateChange = ( e ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = ( e ) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( validateForm() ){\r\n\r\n            if ( activeEvent ){\r\n                dispatch( eventsStartUpdate( formValues ) )\r\n            }\r\n            else {\r\n                dispatch( eventsStartAddNew( formValues ) )\r\n        }\r\n\r\n            setIsTitleValid(true);\r\n            closeModal();\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        \r\n        const momentStart = moment(start)\r\n        const momentEnd = moment(end)\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ){\r\n            Swal.fire('Error', 'Start date should be before end date', 'error');\r\n            return false;\r\n        }\r\n\r\n        if ( title.trim().length === 0){\r\n            setIsTitleValid(false)\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent)? 'Update Event' : 'New Event' } </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={ handleSubmit }>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Start: Date and time</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={ handleStartDateChange }\r\n                        minDate={ now.toDate() }\r\n                        value={ start }\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>End: Date and time</label>\r\n                    <DateTimePicker\r\n                        className=\"form-control\"\r\n                        onChange={ handleEndDateChange }\r\n                        minDate={ start }\r\n                        value={ end }\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Title and notes</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !isTitleValid && 'is-invalid' }` }\r\n                        placeholder=\"Title of the event\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted mt-3\">\r\n                        Short Description\r\n                    </small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notes\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small \r\n                        id=\"emailHelp\" \r\n                        className=\"form-text text-muted\"\r\n                    >\r\n                        Additional info\r\n                    </small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Save </span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","export const CalendarModalStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  }","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventsClearActive } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch( eventsClearActive() );\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab right\"\r\n            onClick={ handleClick }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventsStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch( eventsStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab left\"\r\n            onClick={ handleClick }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\n\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { CalendarEvent } from './CalendarEvent'\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport '../../styles.css'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\nimport { eventsClearActive, eventsSetActive, eventsStartLoading } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\n//**************************************************************************\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.events);\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventsStartLoading() );\r\n        \r\n    }, [ dispatch ]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventsSetActive(e) );\r\n    }\r\n\r\n    const onSelectSlot = () => {\r\n        dispatch( eventsClearActive() );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        \r\n        let color = 'white';\r\n        let backgroundColor = ( event.user._id === uid )? '#367CF7' : '#173F5F';\r\n\r\n        const style = {\r\n            backgroundColor,\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color\r\n        }\r\n\r\n        return {style};\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar className=\"navbar\"/>\r\n\r\n            <div className=\"calendar-container\">\r\n                <Calendar\r\n                    className=\"calendar\"\r\n                    localizer={ localizer }\r\n                    events={ events }\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    view={ lastView }\r\n                    eventPropGetter= { eventStyleGetter }\r\n                    onDoubleClickEvent={ onDoubleClick }\r\n                    onSelectEvent={ onSelectEvent }\r\n                    onSelectSlot={ onSelectSlot }\r\n                    selectable={ true }\r\n                    onView={ onViewChange }\r\n                    components={{\r\n                        event: CalendarEvent\r\n                    }}\r\n                />\r\n\r\n                <CalendarModal />\r\n                \r\n                { activeEvent && !modalOpen && <DeleteEventFab /> }\r\n                <AddNewFab />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './loading.css'\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"loading__container\">\r\n            <h1 className=\"loading__title\">\r\n                Loading...\r\n            </h1>\r\n        <div className=\"loading__loader\"></div>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { Loading } from \"../components/ui/Loading\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n      dispatch( startChecking() );      \r\n    }, [dispatch]);\r\n\r\n    if ( checking ) {\r\n      return (\r\n        <Loading />\r\n      )\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n          <div>\r\n            <Switch>\r\n                <PublicRoute \r\n                  exact \r\n                  path=\"/login\" \r\n                  component={ LoginScreen } \r\n                  isAuthenticated={ !!uid }\r\n                />\r\n                <PrivateRoute \r\n                  exact \r\n                  path=\"/\" \r\n                  component={ CalendarScreen } \r\n                  isAuthenticated={ !!uid }\r\n                />\r\n\r\n                <Redirect to=\"/\" />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      );\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const eventsReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action?.type ) {\r\n        \r\n        case types.eventsAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n        \r\n        case types.eventsSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventsClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventsUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( \r\n                    (e) => (e.id === action.payload.id)\r\n                            ? action.payload\r\n                            : e \r\n                )\r\n            }\r\n\r\n        case types.eventsDelete:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n                events: state.events.filter( event => event.id !== state.activeEvent.id )\r\n            }\r\n\r\n        case types.eventsLoaded: \r\n            return {\r\n                ...state,\r\n                events: action.payload\r\n            }\r\n\r\n        case types.eventsCleanLogout: \r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types'\r\n\r\n\r\n//**************************************************************************\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\n//**************************************************************************\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action?.type ) {\r\n        \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authCheckingFinish: \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        \r\n        case types.authLogout:\r\n            return {\r\n                ...initialState,\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n//**************************************************************************\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\n//**************************************************************************\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action?.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n    \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { eventsReducer } from './eventsReducer'\r\nimport { authReducer } from './authReducer'\r\n\r\nimport { uiReducer } from './uiReducer'\r\n//**************************************************************************\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    events: eventsReducer,\r\n    auth: authReducer\r\n})\r\n\r\n\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n//**************************************************************************\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}